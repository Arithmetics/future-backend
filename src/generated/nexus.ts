/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { core } from "@nexus/schema"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    gender<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "Gender";
    date<FieldName extends string>(fieldName: FieldName, opts?: core.ScalarInputFieldConfig<core.GetGen3<"inputTypes", TypeName, FieldName>>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    gender<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Gender";
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "Date";
  }
}
declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    model: NexusPrisma<TypeName, 'model'>
    crud: any
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  UserCreateInput: { // input type
    birthday?: any | null; // Date
    email: string; // String!
    gender?: any | null; // Gender
    name?: string | null; // String
    nickname?: string | null; // String
    password: string; // String!
    phone?: string | null; // String
    statusMessage?: string | null; // String
  }
  UserUpdateInput: { // input type
    birthday?: any | null; // Date
    email?: string | null; // String
    gender?: any | null; // Gender
    name?: string | null; // String
    nickname?: string | null; // String
    phone?: string | null; // String
    statusMessage?: string | null; // String
  }
}

export interface NexusGenEnums {
  AuthType: "Apple" | "Email" | "Facebook" | "Google"
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Mutation: {};
  Post: { // root type
    content?: string | null; // String
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    id: number; // Int!
    published: boolean; // Boolean!
    title: string; // String!
    updatedAt: any; // DateTime!
  }
  Profile: { // root type
    authType: NexusGenEnums['AuthType']; // AuthType!
    id: string; // String!
    socialId: string; // String!
    verified: boolean; // Boolean!
  }
  Query: {};
  Subscription: {};
  User: { // root type
    birthDay?: any | null; // DateTime
    createdAt: any; // DateTime!
    deletedAt?: any | null; // DateTime
    email: string; // String!
    gender?: any | null; // Gender
    id: string; // String!
    name?: string | null; // String
    nickname?: string | null; // String
    phone?: string | null; // String
    photoURL?: string | null; // String
    thumbURL?: string | null; // String
    updatedAt: any; // DateTime!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  Date: any;
  DateTime: any;
  Gender: any;
  Upload: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  UserCreateInput: NexusGenInputs['UserCreateInput'];
  UserUpdateInput: NexusGenInputs['UserUpdateInput'];
  AuthType: NexusGenEnums['AuthType'];
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Mutation: { // field return type
    createDraft: NexusGenRootTypes['Post']; // Post!
    deletePost: NexusGenRootTypes['Post'] | null; // Post
    publish: NexusGenRootTypes['Post'] | null; // Post
    signIn: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    signUp: NexusGenRootTypes['AuthPayload']; // AuthPayload!
    updateProfile: NexusGenRootTypes['User']; // User!
  }
  Post: { // field return type
    content: string | null; // String
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: number; // Int!
    published: boolean; // Boolean!
    title: string; // String!
    updatedAt: any; // DateTime!
    user: NexusGenRootTypes['User']; // User!
  }
  Profile: { // field return type
    authType: NexusGenEnums['AuthType']; // AuthType!
    id: string; // String!
    socialId: string; // String!
    verified: boolean; // Boolean!
  }
  Query: { // field return type
    feed: NexusGenRootTypes['Post'][]; // [Post!]!
    filterPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    me: NexusGenRootTypes['User'] | null; // User
    post: NexusGenRootTypes['Post'] | null; // Post
  }
  Subscription: { // field return type
    userSignedIn: NexusGenRootTypes['User']; // User!
    userUpdated: NexusGenRootTypes['User']; // User!
  }
  User: { // field return type
    birthDay: any | null; // DateTime
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    email: string; // String!
    gender: any | null; // Gender
    id: string; // String!
    name: string | null; // String
    nickname: string | null; // String
    phone: string | null; // String
    photoURL: string | null; // String
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    profile: NexusGenRootTypes['Profile'] | null; // Profile
    thumbURL: string | null; // String
    updatedAt: any; // DateTime!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createDraft: { // args
      content?: string | null; // String
      title: string; // String!
    }
    deletePost: { // args
      id: number; // Int!
    }
    publish: { // args
      id?: number | null; // Int
    }
    signIn: { // args
      email: string; // String!
      password: string; // String!
    }
    signUp: { // args
      user?: NexusGenInputs['UserCreateInput'] | null; // UserCreateInput
    }
    updateProfile: { // args
      user?: NexusGenInputs['UserUpdateInput'] | null; // UserUpdateInput
    }
  }
  Query: {
    filterPosts: { // args
      searchString?: string | null; // String
    }
    post: { // args
      id?: number | null; // Int
    }
  }
  Subscription: {
    userSignedIn: { // args
      userId: string; // String!
    }
    userUpdated: { // args
      userId: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Mutation" | "Post" | "Profile" | "Query" | "Subscription" | "User";

export type NexusGenInputNames = "UserCreateInput" | "UserUpdateInput";

export type NexusGenEnumNames = "AuthType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Date" | "DateTime" | "Float" | "Gender" | "ID" | "Int" | "String" | "Upload";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}